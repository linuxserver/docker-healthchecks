#!/usr/bin/with-contenv bash

# set default values for variables
if [ -n "${SITE_ROOT}" ]; then
	BASE_URL=$(echo "${SITE_ROOT}"| awk -F[/:] '{print $4}')
fi
declare -A HC_CONF
HC_CONF[DEBUG]=${DEBUG:-False}
HC_CONF[SITE_ROOT]=${SITE_ROOT:-https://healthchecks.example.com}
HC_CONF[BASE_URL]=${BASE_URL:-healthchecks.example.com}
HC_CONF[SITE_NAME]=${SITE_NAME:-healthchecks}
HC_CONF[DEFAULT_FROM_EMAIL]=${DEFAULT_FROM_EMAIL:-noreply@example.com}
HC_CONF[EMAIL_HOST]=${EMAIL_HOST:-smtp.gmail.com}
HC_CONF[EMAIL_PORT]=${EMAIL_PORT:-587}
HC_CONF[EMAIL_HOST_USER]=${EMAIL_HOST_USER:-username}
HC_CONF[EMAIL_HOST_PASSWORD]=${EMAIL_HOST_PASSWORD:-password}
HC_CONF[EMAIL_USE_TLS]=${EMAIL_USE_TLS:-True}

if [ ! -f "/config/local_settings.py" ]; then
	# sed in values or skip if value not set
	for KEY in "${!HC_CONF[@]}"; do
		if [[ ! ${HC_CONF[$KEY]} == "" ]]; then
			if [[ ${HC_CONF[$KEY]} == False ]] || [[ ${HC_CONF[$KEY]} == True ]]; then
				echo "$KEY = ${HC_CONF[$KEY]}" >> /config/local_settings.py
			else
				echo "$KEY = \"${HC_CONF[$KEY]}\"" >> /config/local_settings.py
			fi
		fi
	done
	echo "ALLOWED_HOSTS = [\"${HC_CONF[BASE_URL]}\"]" >> /config/local_settings.py
	echo "CSRF_TRUSTED_ORIGINS = [\"${HC_CONF[BASE_URL]}\"]" >> /config/local_settings.py
	echo "PING_ENDPOINT = SITE_ROOT + \"/ping/\"" >> /config/local_settings.py
fi

if [ ! -f "/app/healthchecks/hc/local_settings.py" ]; then
	ln -s /config/local_settings.py /app/healthchecks/hc/local_settings.py
fi

if [ ! -f "/app/healthchecks/hc.sqlite" ]; then
	ln -s /config/hc.sqlite /app/healthchecks/hc.sqlite
fi

if [ ! -d "/config/img" ]; then
	mkdir /config/img
fi

mv /defaults/uwsgi.ini /app/healthchecks/uwsgi.ini > /dev/null 2>&1

# copy over configurable logo files
FILES="favicon.ico
apple-touch-180.png
logo@2x.png
logo.png
logo-512-green.png
logo-full@2x.png
logo-full.png"
for f in $FILES
do
	if [ ! -f "/config/img/$f" ]; then
		cp "/app/healthchecks/static/img/$f" "/config/img/$f"
	fi

	rm "/app/healthchecks/static/img/$f" > /dev/null 2>&1
	ln -s "/config/img/$f" "/app/healthchecks/static/img/$f"
done

# permissions
chown -R abc:abc \
	/app/healthchecks \
	/config

cd /app/healthchecks || exit

s6-setuidgid abc /usr/bin/python3 ./manage.py migrate

if [ -n "$SUPERUSER_EMAIL" ] && [ -n "$SUPERUSER_PASSWORD" ];
then
cat << EOF | s6-setuidgid abc python3 /app/healthchecks/manage.py shell
from django.contrib.auth.models import User;

username = 'admin';
password = '$SUPERUSER_PASSWORD';
email = '$SUPERUSER_EMAIL';

if User.objects.filter(username=username).count()==0:
    User.objects.create_superuser(username, email, password);
    print('Superuser created.');
else:
    print('Superuser creation skipped. Already exists.');
EOF
fi
